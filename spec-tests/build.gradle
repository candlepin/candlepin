plugins {
    id "java"
    id "checkstyle"
    id "com.adarshr.test-logger"
}
apply from: "../dependencies.gradle"

repositories {
    mavenCentral()
}

description = "Candlepin Spec Tests"

dependencies {
    implementation project(":client")

    implementation libraries["okhttp"]
    implementation libraries["okhttpTls"]
    implementation libraries["slf4j"]
    implementation libraries["junitApi"]
    implementation libraries["jacksonDatabind"]
    implementation libraries["jacksonJdk8"]
    implementation libraries["jacksonJsr310"]
    implementation libraries["assertj"]
    implementation libraries["commonsCodec"]

    testRuntimeOnly libraries["junitEngine"]

    checkstyle libraries["checkstyle"]
    checkstyle libraries["checkstyleSevntu"]

    implementation fileTree(dir: '/usr/lib64/jss', include: '*.jar')
}

// Disable empty test task
test {
    enabled = false
}

task spec(type: Test) {
    description = 'Run Java based spec tests'
    group = 'Verification'
    outputs.upToDateWhen { false }

    useJUnitPlatform()

    // We have to propagate the -D params if we want them available in tests
    System.properties.keys().each { key ->
        def properyKey = key.toString()
        if (properyKey.startsWith("spec.test.client")) {
            systemProperty properyKey, System.getProperty(properyKey)
        }
    }
}

testlogger {
    theme 'standard'
    showExceptions true
    showStackTraces true
    showFullStackTraces project.hasProperty("full")
    showCauses true
    slowThreshold 2000
    showSummary true
    showSimpleNames false
    showPassed true
    showSkipped true
    showFailed true
    showOnlySlow false
    showStandardStreams project.hasProperty("full")
    showPassedStandardStreams false
    showSkippedStandardStreams false
    showFailedStandardStreams project.hasProperty("full")
    logLevel 'lifecycle'
}

// Create a single checkstyle task to make it easier to run both the checkstyleMain & checkstyleTest targets
task checkstyleSpec(dependsOn: [tasks.checkstyleMain, tasks.checkstyleTest]) {
    description = "Run checkstyle for both the Main & Test targets"
    group = "Verification"
}
