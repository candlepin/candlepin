#!/bin/bash

CERTS_HOME=/etc/candlepin/certs
UPSTREAM_CERTS_HOME=$CERTS_HOME/upstream
KEYSTORE_PASSWORD=$CERTS_HOME/keystore-password.txt
CA_KEY=$CERTS_HOME/candlepin-ca.key
CA_REDHAT_CERT_1=config/candlepin/candlepin-redhat-ca.crt
CA_REDHAT_CERT_2=config/candlepin/candlepin-redhat-r2-ca.crt
CA_UPSTREAM_CERT=$UPSTREAM_CERTS_HOME/candlepin-redhat-ca.crt
CA_PUB_KEY=$CERTS_HOME/candlepin-ca-pub.key
CA_CERT=$CERTS_HOME/candlepin-ca.crt
KEYSTORE=$CERTS_HOME/keystore

if [ -z "$CA_CERT_DAYS" ]; then
    CA_CERT_DAYS=365
fi

while getopts ":f" opt; do
    case $opt in
        f  ) FORCECERT="1" ;;
    esac
done

shift $(($OPTIND - 1))

if [ $(id -u) -ne 0 ]; then
    if ( command -v sudo >/dev/null 2>&1 ) then
        SUDO="sudo"
    else
        echo "WARNING: sudo is not available. This command may need to be re-run with root access to complete successfully." >&2
    fi
fi



rpm -q openssl > /dev/null
if [ "$?" -ne 0 ]; then
    echo "Certificate generation failed - please install openssl."
    exit 1
fi

if [ ! -d $CERTS_HOME ]; then
    echo "Creating $CERTS_HOME"
    $SUDO mkdir -p $CERTS_HOME
fi
if [ ! -d $UPSTREAM_CERTS_HOME ]; then
    echo "Creating $UPSTREAM_CERTS_HOME"
    $SUDO mkdir -p $UPSTREAM_CERTS_HOME
fi

HOSTNAME=${HOSTNAME:-$(hostname)}

if [ -f $CA_KEY ] && [ -f $CA_CERT ] && [ "$FORCECERT" != "1" ]; then
    echo "Certificates are already present."
else
    echo "Creating CA private key"
    # 1509952: FIPS deployments need atleast 2048
    $SUDO openssl genrsa -out $CA_KEY 2048
    echo "Creating CA public key"
    $SUDO openssl rsa -pubout -in $CA_KEY -out $CA_PUB_KEY
    echo "Creating CA certificate"
    $SUDO openssl req -new -x509 -days $CA_CERT_DAYS -key $CA_KEY -out $CA_CERT -subj "/CN=$HOSTNAME/C=US/L=Raleigh/"
    $SUDO su -c "echo -n "password" > $KEYSTORE_PASSWORD"
    $SUDO openssl pkcs12 -export -in $CA_CERT -inkey $CA_KEY -out $KEYSTORE -name tomcat -CAfile $CA_CERT -caname root -chain -password file:$KEYSTORE_PASSWORD

    # Tomcat 8.5+ requires the cert be separate from the key when used as both a keystore and a trust store
    $SUDO keytool -keystore $KEYSTORE -noprompt -importcert -storepass:file $KEYSTORE_PASSWORD -alias candlepin_ca -file $CA_CERT

    $SUDO chmod a+r $CERTS_HOME/*
    $SUDO cp $CA_REDHAT_CERT_1 $CA_UPSTREAM_CERT
    $SUDO cp $CA_REDHAT_CERT_2 $CA_UPSTREAM_CERT
    $SUDO chmod a+r $KEYSTORE
fi
