---
name: Sonar

on:
  workflow_run:
    workflows: [Unit tests]
    types: [completed]

jobs:
  sonar:
    name: Sonar
    runs-on: ubuntu-latest
    if: github.event.workflow_run.conclusion == 'success'
    steps:
      - name: echo event
        run: cat $GITHUB_EVENT_PATH

      - name: Mask secrets
        shell: bash
        run: |
          echo "::add-mask::${{ secrets.GITHUB_TOKEN }}"
          echo "::add-mask::${{ secrets.SONAR_TOKEN }}"

      - name: Download PR number artifact
        uses: dawidd6/action-download-artifact@v6
        with:
          workflow: unit_tests.yml
          run_id: ${{ github.event.workflow_run.id }}
          name: pr_number
          allow_forks: true

      - name: Read PR_NUMBER.txt
        id: pr_number
        uses: juliangruber/read-file-action@v1
        with:
          path: ./PR_NUMBER.txt

      - name: Install dependencies
        shell: bash
        run: sudo apt-get install -y gettext git-core unzip

      - name: Request GitHub API for PR data
        uses: octokit/request-action@v2.x
        id: get_pr_data
        with:
          route: GET /repos/{full_name}/pulls/{number}
          number: ${{ steps.pr_number.outputs.content }}
          full_name: ${{ github.event.repository.full_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/checkout@v4
        with:
          repository: ${{ github.event.workflow_run.head_repository.full_name }}
          ref: ${{ github.event.workflow_run.head_branch }}
          fetch-depth: 0

      - name: Checkout base branch
        env:
          BASE_REF: ${{ fromJson(steps.get_pr_data.outputs.data).base.ref }}
          HEAD_BRANCH: ${{ github.event.workflow_run.head_branch }}
          REPO_URL: ${{ github.event.repository.clone_url }}
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git remote add upstream "$REPO_URL"
          git fetch upstream
          git checkout -B "$BASE_REF" "upstream/$BASE_REF"
          git checkout "$HEAD_BRANCH"
          git clean -ffdx && git reset --hard HEAD


      - name: Set Environment Variables
        uses: ./.github/actions/set_vars
        with:
          varFilePath: ./.github/variables/pr_verification.env

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          java-version: ${{ env.JAVA_VERSION }}

      - name: Download unit test report
        uses: dawidd6/action-download-artifact@v6
        with:
          workflow: unit_tests.yml
          run_id: ${{ github.event.workflow_run.id }}
          name: unit_test_reports
          allow_forks: true

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Analyze
        env:
          HEAD_SHA: ${{ github.event.workflow_run.head_sha }}
          PR_KEY: ${{ fromJson(steps.get_pr_data.outputs.data).number }}
          BASE_REF: ${{ fromJson(steps.get_pr_data.outputs.data).base.ref }}
          HEAD_REF: ${{ fromJson(steps.get_pr_data.outputs.data).head.ref }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          ./gradlew sonar \
            -x coverage \
            -Dsonar.scm.provider=git \
            -Dsonar.scm.revision="$HEAD_SHA" \
            -Dsonar.pullrequest.key="$PR_KEY" \
            -Dsonar.pullrequest.base="$BASE_REF" \
            -Dsonar.pullrequest.branch="$HEAD_REF"
