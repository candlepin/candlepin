import groovy.text.GStringTemplateEngine
import org.gradle.api.tasks.options.Option
import org.apache.tools.ant.filters.ReplaceTokens

apply plugin: 'war'
apply plugin: Gettext

description = 'Candlepin Server'

// Copy the resources to the main classes directory so that the
// persistence context is in the the same classpath entry for
// Hibernate annotation based discovery.
sourceSets.main.output.resourcesDir = new File(buildDir, "classes/java/main")

project.getTasks().getByName("gettext").dependsOn(":candlepin-common:gettext")
gettext {
    keys_project_dir = "${project.rootDir}/common"
}

// Set the JVM arguments to be used for testing
test {
    useJUnitPlatform()
    maxHeapSize = '2g'
    jvmArgs '-XX:+HeapDumpOnOutOfMemoryError'
}

// substitut the version & release in the version.properties used by the status resource at runtime
processResources {
    from('src/main/resources') {
        include 'version.properties'
        expand([version: project.getVersion(), release: project.findProperty('release')])
    }
}

war {
    if (! hostedtest){
        rootSpec.exclude('**/hostedtest/**')
    }
    manifest {
        attributes(
                "Implementation-Title": "The Candlepin Project",
                "Copyright": "Red Hat, Inc. 2018"
        )
    }
    // Copy the license file into place in the final manifest
    from(projectDir) {
        include 'LICENSE'
        into('META-INF')
    }
}

configurations {
    compile {
        extendsFrom(antlr, commons, ehcache, guice, jackson, javax, liquibase, logging_deps, sun_jaxb, swagger,
                resteasy, collections)
    }
    testCompile {
        extendsFrom(core_testing, jukito, liquibase_slf4j)
    }
}

class Rspec extends DefaultTask {

    Rspec() {
        description = 'Run ruby based spec tests'
        group = 'Verification'
    }

    @Input
    String test = ""

    @Input
    String spec = ""

    @Option(option = 'spec', description = 'The name of the spec file to search. Example: "core_and_ram"')
    void setSpec(final String specfile_name) {
        this.spec = specfile_name
    }

    @Option(option = 'test', description = 'Set the name of the spec test to run')
    void setTest(final String test_name) {
        this.test = test_name
    }

    @TaskAction
    runRspec() {
        def rspec_args = [
                "--format", "documentation",
                "--force-color",
                "--require", "${project.rootDir}/tasks/failure_formatter",
                "--format", "ModifiedRSpec::FailuresFormatter",
                "-I", "${project.getProjectDir()}/client/ruby"
        ]

        // Use --pattern to match the name of the spec file for the spec argument
        if (spec){
            rspec_args.add("--pattern")
            rspec_args.add("**/${spec}*_spec.rb")
        }

        // use -e to match the name of a specific test within the matched spec files
        if (test){
            rspec_args.add("-e")
            rspec_args.add(test)
        }

        project.exec {
            executable 'rspec'
            args rspec_args
            workingDir project.getProjectDir()
        }
    }
}

task rspec(type: Rspec)

// A task to generate the the candlepin config file for use in etc or other locations.
task generateConfig() {
    def template = file('conf/candlepin.conf.template')
    def targetFile = file("$buildDir/candlepin.conf")
    doLast {
        // change contents via cli options
        def binding = [project: project]
        // change file contents
        def tmp = new GStringTemplateEngine()
                .createTemplate(template)
                .make(binding)
        targetFile.write(tmp.toString(), 'UTF-8')
    }
}

dependencies {

    compile project(':candlepin-common')

    // Hibernate
    compile 'org.hibernate:hibernate-core:5.3.6.Final' exclude module: '*'
    compile 'org.hibernate:hibernate-c3p0:5.3.6.Final' exclude module: '*'
    compile 'org.hibernate.common:hibernate-commons-annotations:5.0.2.Final' exclude module: '*'
    compile 'org.hibernate:hibernate-tools:3.2.4.GA' exclude module: '*'
    compile 'org.hibernate.validator:hibernate-validator:6.0.7.Final' exclude module: '*'
    annotationProcessor 'org.hibernate.validator:hibernate-validator-annotation-processor:6.0.7.Final'
    compile 'org.ow2.asm:asm:6.2.1' exclude module: '*'
    compile 'net.bytebuddy:byte-buddy-dep:1.8.18' exclude module: '*'
    compile 'cglib:cglib:2.2' exclude module: '*'
    compile 'org.javassist:javassist:3.20.0-GA' exclude module: '*'
    compile 'com.fasterxml:classmate:1.3.1' exclude module: '*'
    compile 'org.freemarker:freemarker:2.3.15' exclude module: '*'
    compile 'com.mchange:c3p0:0.9.5.2' exclude module: '*'
    compile 'com.mchange:mchange-commons-java:0.2.11' exclude module: '*'
    compile 'dom4j:dom4j:1.6.1' exclude module: '*'
    compile 'org.jboss:jandex:2.0.0.Final' exclude module: '*'
    compile 'org.jboss.logging:jboss-logging:3.3.0.Final' exclude module: '*'

    // DB Drivers
    compile 'org.postgresql:postgresql:42.2.2' exclude module: '*'
    compile 'mysql:mysql-connector-java:5.1.26' exclude module: '*'

    // Testing DB Drivers
    testCompile 'org.hsqldb:hsqldb:2.3.2' exclude module: '*'

    compile 'com.googlecode.gettext-commons:gettext-commons:0.9.8' exclude module: '*'

    // Only include bouncycastle for testing purposes (compare against jss)
    testCompile 'org.bouncycastle:bcpkix-jdk15on:1.60' exclude module: '*'
    testCompile 'org.bouncycastle:bcprov-jdk15on:1.60' exclude module: '*'

    compile 'org.mozilla:jss:4.5.0' exclude module: '*'
    compile 'ldapjdk:ldapjdk:4.19' exclude module: '*'
    compile 'org.quartz-scheduler:quartz:2.2.1' exclude module: '*'

    // These for ActiveMQ Artemis
    compile 'org.apache.activemq:artemis-server:2.4.0' exclude module: '*'
    compile 'org.apache.activemq:artemis-core-client:2.4.0' exclude module: '*'
    compile 'org.apache.activemq:artemis-commons:2.4.0' exclude module: '*'
    compile 'org.apache.activemq:artemis-selector:2.4.0' exclude module: '*'
    compile 'org.apache.activemq:artemis-journal:2.4.0' exclude module: '*'
    compile 'io.netty:netty-all:4.1.16.Final' exclude module: '*'
    compile 'commons-beanutils:commons-beanutils:1.9.3' exclude module: '*'
    compile 'org.jgroups:jgroups:3.6.13.Final' exclude module: '*'
    compile 'org.apache.geronimo.specs:geronimo-json_1.0_spec:1.0-alpha-1' exclude module: '*'
    compile 'org.apache.johnzon:johnzon-core:0.9.5' exclude module: '*'

    // AMQP drivers for talking to QPID
    compile 'org.apache.qpid:qpid-common:0.32' exclude module: '*'
    compile 'org.apache.qpid:qpid-client:0.32' exclude module: '*'
    compile 'org.apache.mina:mina-core:1.0.1' exclude module: '*'
    compile 'org.apache.mina:mina-filter-ssl:1.0.1' exclude module: '*'
    compile 'geronimo-spec:geronimo-spec-jms:1.1-rc4' exclude module: '*'

    // Javascript engine
    compile 'org.mozilla:rhino:1.7R3' exclude module: '*'

    // Validation
    compile 'javax.validation:validation-api:2.0.1.Final' exclude module: '*'

    providedCompile 'javax.servlet:servlet-api:2.5' exclude module: '*'

    if (use_logdriver){
        compile 'org.slf4j:log4j-over-slf4j:1.7.5'
        compile 'logdriver:logdriver:1.0'
    }
}
