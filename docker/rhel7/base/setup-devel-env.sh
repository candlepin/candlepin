#!/bin/bash
#
# Sets a system up for a candlepin development environment (minus a db,
# handled separately), and an initial clone of candlepin.

export JAVA_HOME=/usr/lib/jvm/java-1.7.0/
export HOME=/root

PACKAGES=(
    gcc
    gettext
    git
    java-1.7.0-openjdk-devel
    libxml2-python
    liquibase
    openssl
    python-pip
    rsyslog
    ruby
    ruby-devel
    rubygems
    tig
    tmux
    tomcat
    vim-enhanced
    wget
)

# We need epel for supervisor
cat > /etc/yum.repos.d/epel.repo <<EPELREPOCONF
[epel]
name=Extra Packages for Enterprise Linux 7 - x86_64
#baseurl=http://download.fedoraproject.org/pub/epel/7/x86_64
mirrorlist=https://mirrors.fedoraproject.org/metalink?repo=epel-7&arch=x86_64
failovermethod=priority
enabled=1
# sigh
gpgcheck=0
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-EPEL-7
EPELREPOCONF


# who knows how wrong the metadata is

yum clean all

# guess what we have to update first? subscription-manager!
yum update -y

# We actually need all of the locale info...
yum reinstall glibc-common

# But we can't use it's repos tool, so lets use yum-config-manager
yum -y install yum-utils
# So we can get ruby-devel
yum-config-manager --enable rhel-7-server-optional-rpms

yum repolist

yum clean all

yum repolist

yum -y install ${PACKAGES[@]}

# Setup for autoconf:
mkdir /etc/candlepin
echo "# AUTOGENERATED" > /etc/candlepin/candlepin.conf

cat > /root/.bashrc <<BASHRC
if [ -f /etc/bashrc ]; then
	. /etc/bashrc
fi
BASHRC

# Create an initial candlepin checkout at /candlepin in image to help decrease
# the amount of time to run tests later on.
git clone https://github.com/candlepin/candlepin.git /candlepin
cd /candlepin

# Allow for grabbing specific pull requests
git config --add remote.origin.fetch "+refs/pull/*:refs/remotes/origin/pr/*"
git pull

# Install all ruby deps:
gem install bundler
bundle install

# Installs all Java deps into the image, big time saver:
buildr artifacts
