openapi: 3.0.2
info:
  title: Candlepin
  description: Candlepin is a subscription management server written in Java. It helps with management of software subscriptions.
  version: 3.0.0-draft

servers:
  - url: /candlepin

security:
  - basicAuth: []

paths:
  /:
    get:
      description: Retrieves a list of links corresponding to Root resources
      tags:
        - root
      operationId: getRootResources
      security: []  # this resource doesn't require auth
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Link'
        default:
          $ref: '#/components/responses/default'

  /consumertypes:
    get:
      description: Retrieves a list of known consumer types
      tags:
          - Consumer
          - ConsumerType
      operationId: getConsumerTypes
      x-java-response-container-type: Iterable
      security: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ConsumerTypeDTO'
        default:
          $ref: '#/components/responses/default'

    post:
      description: Creates a new consumer type
      tags:
        - Consumer
        - ConsumerType
      operationId: createConsumerType
      security: []
      requestBody:
          description: The consumer type to create
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsumerTypeDTO'
      responses:
        200:
          description: ''
          content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ConsumerTypeDTO'
        default:
          $ref: '#/components/responses/default'

  /consumertypes/{id}:
    get:
      description: Retrieves a specific consumer type
      tags:
          - Consumer
          - ConsumerType
      operationId: getConsumerType
      security: []
      parameters:
      - name: id
        in: path
        description: The ID of the consumer type to retrieve
        required: true
        schema:
          type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsumerTypeDTO'
        404:
          description: A consumer type could not be found using the provided ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
        default:
          $ref: '#/components/responses/default'

    put:
      description: Updates an existing consumer type
      tags:
        - Consumer
        - ConsumerType
      operationId: updateConsumerType
      security: []
      parameters:
      - name: id
        in: path
        description: The ID of the consumer type to update
        required: true
        schema:
          type: string
      requestBody:
          description: The fields and updated values to apply to the specified consumer type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsumerTypeDTO'
      responses:
        200:
          description: ''
          content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ConsumerTypeDTO'
        404:
          description: A consumer type could not be found using the provided ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
        default:
          $ref: '#/components/responses/default'

    delete:
      description: Deletes an existing consumer type
      tags:
          - Consumer
          - ConsumerType
      operationId: deleteConsumerType
      security: []
      parameters:
      - name: id
        in: path
        description: The ID of the consumer type to delete
        required: true
        schema:
          type: string
      responses:
        204:
          description: ''
        404:
          description: A consumer type could not be found using the provided ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
        default:
          $ref: '#/components/responses/default'

  /deleted_consumers:
    get:
      description: Retrieves a list of deleted consumers by deletion date or all. List returned is the deleted Consumers.
      tags:
        - Consumer
        - DeletedConsumer
      operationId: listByDate
      parameters:
        - in: query
          name: date
          schema:
            type: string
          description: Filter deleted consumers to those on or after this date
      x-java-response-container-type: java.lang.Iterable
      security: []
      responses:
        200:
          description: A list of deleted consumers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeletedConsumerDTO'
        400:
          description: When date is invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
        default:
          $ref: '#/components/responses/default'

  /distributor_versions:
    get:
      tags:
        - DistributorVersions
      description: Retrieves a list of Distributor Versions
      operationId: getVersions
      x-java-response-container-type: java.util.stream.Stream
      security: []
      parameters:
        - name: name_search
          in: query
          required: false
          schema:
            type: string
        - name: capability
          in: query
          required: false
          schema:
            type: string
      responses:
        200:
          description: A successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/definitions/DistributorVersionDTO'
        default:
          description: An unexpected exception occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionMessage'

    post:
      tags:
        - DistributorVersions
      description: Creates a Distributor Version
      operationId: create
      security: []
      requestBody:
        description: A new distributor version to be created
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DistributorVersionDTO'
      responses:
        200:
          description: A successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DistributorVersionDTO'
        400:
          description: A distributor version already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
        default:
          description: An unexpected exception occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionMessage'

  /distributor_versions/{id}:
    put:
      tags:
        - DistributorVersions
      description: Updates a Distributor Version
      operationId: update
      security: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: The fields and updated values to apply to the specified distributor version
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DistributorVersionDTO'
      responses:
        200:
          description: A successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DistributorVersionDTO'
        404:
          description: A distibutor version could not be found using the provided ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
        default:
          description: An unexpected exception occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionMessage'

    delete:
      tags:
        - DistributorVersions
      description: Deletes a Distributor Version
      operationId: delete
      security: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        204:
          description: A successful operation
        404:
          description: Distributor version could not be found using the provided ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
        default:
          description: An unexpected exception occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionMessage'

  /serials:
    get:
      description: Retrieves a list of Certificate Serials
      tags:
        - CertificateSerial
      operationId: getCertificateSerials
      x-java-response-container-type: Iterable
      security: []
      responses:
        200:
          description: A list of certificate serials
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CertificateSerialDTO'
        default:
          $ref: '#/components/responses/default'

  /serials/{id}:
    get:
      description: Retrieves a single Certificate Serial
      tags:
        - CertificateSerial
      operationId: getCertificateSerial
      security: []
      parameters:
        - name: id
          in: path
          description: The ID of the certificate serial to retrieve
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateSerialDTO'
        404:
          description: A certificate serial could not be found using the provided ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
        default:
          $ref: '#/components/responses/default'

  /status:
    get:
      description: Returns status of the server
      tags:
        - Status
      operationId: status
      security: []
      responses:
        200:
          description: Status information about running Candlepin server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusDTO'
        default:
          $ref: '#/components/responses/default'

components:
  responses:
    default:
      description: An unexpected exception occurred
      content:
        application/json":
          schema:
            $ref: '#/components/schemas/ExceptionMessage'

  schemas:
    TimestampedEntity:
      properties:
        created:
          type: string
          format: date-time
        updated:
          type: string
          format: date-time

    ExceptionMessage:
      description: An exception occurred
      properties:
        displayMessage:
          type: string
        requestUuid:
          type: string
    Link:
      description: Used to represent a link to a top level resource in Candlepin
      properties:
        rel:
          type: string
        href:
          type: string

    AsyncJobStatusDTO:
      description: DTO representing an async job status
      allOf:
        - $ref: '#/components/schemas/TimestampedEntity'
        - type: object
          properties:
            id:
              type: string
              example: "ff808081554a3e4101554a3e9033005d"
            key:
              type: string
              example: "RefreshPoolsJob"
            name:
              type: string
              example: "refresh pools job"
            group:
              type: string
              example: "refresh"
            origin:
              type: string
              example: "candlepin.myhost.com"
            executor:
              type: string
              example: "candlepin.myhost.com"
            principal:
              type: string
              example: "admin"
            state:
              type: string
              example: "RUNNING"
            previousState:
              type: string
              example: "QUEUED"
            startTime:
              type: string
              format: date-time
              example: "2019-05-08 09:42:37.000"
            endTime:
              type: string
              format: date-time
              example: "2019-05-08 09:42:37.000"
            attempts:
              type: integer
              example: "1"
            maxAttempts:
              type: integer
              example: "3"
            statusPath:
              type: string
              example: "/jobs/ff808081554a3e4101554a3e9033005d"
            resultData:
              type: object
              example: "Refresh completed successfully!"

    ActivationKeyDTO:
      description: A token that allows registration without username/password and sets subscription and content related properties at registration.
      allOf:
        - $ref: '#/components/schemas/TimestampedEntity'
        - type: object
          properties:
            id:
              type: string
            name:
              type: string
            description:
              type: string
            owner:
              $ref: '#/components/schemas/NestedOwnerDTO'
            releaseVer:
              $ref: '#/components/schemas/ReleaseVerDTO'
            serviceLevel:
              type: string
            usage:
              type: string
            role:
              type: string
            addOns:
              type: array
              uniqueItems: true
              items:
                type: string
            autoAttach:
              type: boolean
            pools:
              type: array
              uniqueItems: true
              items:
                $ref: '#/components/schemas/ActivationKeyPoolDTO'
            products:
              type: array
              uniqueItems: true
              items:
                $ref: '#/components/schemas/ActivationKeyProductDTO'
            contentOverrides:
              type: array
              uniqueItems: true
              items:
                $ref: '#/components/schemas/ContentOverrideDTO'

    ActivationKeyProductDTO:
      required:
        - productId
      properties:
        productId:
          type: string
          minLength: 1

    ActivationKeyPoolDTO:
      required:
        - poolId
      properties:
        poolId:
          type: string
          minLength: 1
        quantity:
          type: integer
          format: int64

    ReleaseVerDTO:
      properties:
        releaseVer:
          type: string

    NestedOwnerDTO:
      properties:
        id:
          type: string
        key:
          type: string
        displayName:
          type: string
        href:
          type: string

    CertificateSerialDTO:
      description: Represents a database sequence used to ensure certificates receive unique serial numbers
      allOf:
        - $ref: '#/components/schemas/TimestampedEntity'
        - type: object
          properties:
            id:
              type: string
            serial:
              type: string
            expiration:
              type: string
              format: date-time
            collected:
              type: boolean
            revoked:
              type: boolean

    CertificateDTO:
      description: Represents certificate details
      allOf:
        - $ref: '#/components/schemas/TimestampedEntity'
        - type: object
          properties:
            id:
              type: string
            key:
              type: string
            cert:
              type: string
            serial:
              $ref: '#/components/schemas/CertificateSerialDTO'

    ConsumerTypeDTO:
      description: Represents a consumer type used to differentiate various types of consumers
      allOf:
        - $ref: '#/components/schemas/TimestampedEntity'
        - type: object
          properties:
            id:
              type: string
            label:
              type: string
            manifest:
              type: boolean

    ContentOverrideDTO:
      description: Represents a content override for an activation key or consumer
      allOf:
        - $ref: '#/components/schemas/TimestampedEntity'
        - type: object
          required:
            - name
            - contentLabel
          properties:
            name:
              type: string
              minLength: 1
            contentLabel:
              type: string
              minLength: 1
            value:
              type: string

    CdnDTO:
      description: DTO representing a Cdn
      allOf:
        - $ref: '#/components/schemas/TimestampedEntity'
        - type: object
          properties:
            id:
              type: string
            label:
              type: string
            name:
              type: string
            url:
              type: string
            certificate:
              $ref: '#/components/schemas/CertificateDTO'

    DeletedConsumerDTO:
      description: Represents a deleted consumer
      allOf:
        - $ref: '#/components/schemas/TimestampedEntity'
        - properties:
            id:
              type: string
            consumerUuid:
              type: string
            ownerId:
              type: string
            ownerKey:
              type: string
            ownerDisplayName:
              type: string
            principalName:
              type: string

    DistributorVersionDTO:
      description: A DTO representation of the DistributorVersion
      allOf:
        - $ref: '#/components/schemas/TimestampedEntity'
        - type: object
          properties:
            id:
              type: string
            name:
              type: string
            displayName:
              type: string
            capabilities:
              type: array
              uniqueItems: true
              items:
                $ref: '#/definitions/DistributorVersionCapabilityDTO'

    DistributorVersionCapabilityDTO:
      description: A DTO representation of the DistributorVersionCapability
      type: object
      required:
        - name
      properties:
        id:
          type: string
        name:
          type: string
          minLength: 1

    GuestIdDTO:
      description: Represents a guest ID running on a virt host consumer
      allOf:
        - $ref: '#/components/schemas/TimestampedEntity'
        - type: object
          properties:
            id:
              type: string
            guestId:
              type: string
            attributes:
              type: object
              additionalProperties:
                type: string

    GuestIdDTOArrayElement:
      description: Represents a guest ID running on a virt host consumer. Does not include the attributes field
      allOf:
        - $ref: '#/components/schemas/TimestampedEntity'
        - type: object
          properties:
            id:
              type: string
            guestId:
              type: string

    PermissionBlueprintDTO:
      description: Represents the permission blueprints exposed to the API layer
      allOf:
        - $ref: '#/components/schemas/TimestampedEntity'
        - type: object
          properties:
            id:
              type: string
              example: "ff808081554a3e4101554a3e9033005d"
            owner:
              $ref: "#/components/schemas/NestedOwnerDTO"
            type:
              type: string
              example: "OWNER"
            access:
              type: string
              example: "NONE"

    OwnerDTO:
      description: DTO representing an owner/organization
      allOf:
        - $ref: '#/components/schemas/TimestampedEntity'
        - type: object
          properties:
            id:
              type: string
            displayName:
              type: string
            key:
              type: string
            contentPrefix:
              type: string
            defaultServiceLevel:
              type: string
            logLevel:
              type: string
            contentAccessMode:
              type: string
            contentAccessModeList:
              type: string
            autobindHypervisorDisabled:
              type: boolean
            autobindDisabled:
              type: boolean
            lastRefreshed:
              type: string
              format: date-time
            parentOwner:
              $ref: '#/components/schemas/NestedOwnerDTO'
            upstreamConsumer:
              $ref: '#/components/schemas/UpstreamConsumerDTO'

    RoleDTO:
      description: Represent the relationship between users and the permissions they have
      allOf:
        - $ref: '#/components/schemas/TimestampedEntity'
        - type: object
          properties:
            id:
              type: string
              example: "ff808081554a3e4101554a3e9033005d"
            name:
              type: string
              example: "admin-all"
            users:
              type: array
              uniqueItems: true
              items:
                "$ref": "#/components/schemas/UserDTO"
            permissions:
              type: array
              items:
                "$ref": "#/components/schemas/PermissionBlueprintDTO"

    StatusDTO:
      description: Version and Status information about running Candlepin server
      properties:
        mode:
          type: string
        modeReason:
          type: string
        modeChangeTime:
          type: string
          format: date-time
        result:
          type: boolean
          example: true
        version:
          type: string
          example: 0.9.10
        release:
          type: string
        standalone:
          type: boolean
        timeUTC:
          type: string
          format: date-time
        rulesSource:
          type: string
        rulesVersion:
          type: string
          example: 5.8
        managerCapabilities:
          type: array
          uniqueItems: true
          items:
            type: string
        keycloakRealm:
          type: string
        keycloakAuthUrl:
          type: string
        keycloakResource:
          type: string

    UserDTO:
      description: "Represents user information for a given user"
      allOf:
        - $ref: '#/components/schemas/TimestampedEntity'
        - type: object
          properties:
            id:
              type: string
              example: "ff808081554a3e4101554a3e9033005d"
            username:
              type: string
              example: "admin"
            password:
              type: string
              example: "secret_banana"
              writeOnly: true
            superAdmin:
              type: boolean
              example: true
              default: false

    UpstreamConsumerDTO:
      description: DTO representing an upstream consumer
      allOf:
        - $ref: '#/components/schemas/TimestampedEntity'
        - type: object
          properties:
            id:
              type: string
            uuid:
              type: string
            name:
              type: string
            apiUrl:
              type: string
            webUrl:
              type: string
            ownerId:
              type: string
            contentAccessMode:
              type: string
            type:
              $ref: '#/components/schemas/ConsumerTypeDTO'
            idCert:
              $ref: '#/components/schemas/CertificateDTO'

  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
